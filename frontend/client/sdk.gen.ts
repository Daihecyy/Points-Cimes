// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetReportsTypesData, GetReportsTypesResponses, GetReportsStatusesData, GetReportsStatusesResponses, PatchReportsReportIdStatusData, PatchReportsReportIdStatusResponses, PatchReportsReportIdStatusErrors, DeleteReportsReportIdData, DeleteReportsReportIdResponses, DeleteReportsReportIdErrors, GetReportsReportIdData, GetReportsReportIdResponses, GetReportsReportIdErrors, PatchReportsReportIdData, PatchReportsReportIdResponses, PatchReportsReportIdErrors, GetReportsData, GetReportsResponses, GetReportsErrors, PostReportsData, PostReportsResponses, PostReportsErrors, RootGetData, RootGetResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Reports {
    /**
     * Get Report Types
     */
    public static getReportsTypes<ThrowOnError extends boolean = false>(options?: Options<GetReportsTypesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetReportsTypesResponses, unknown, ThrowOnError>({
            url: '/reports/types',
            ...options
        });
    }
    
    /**
     * Get Report Statuses
     */
    public static getReportsStatuses<ThrowOnError extends boolean = false>(options?: Options<GetReportsStatusesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetReportsStatusesResponses, unknown, ThrowOnError>({
            url: '/reports/statuses',
            ...options
        });
    }
    
    /**
     * Change Report Status
     */
    public static patchReportsReportIdStatus<ThrowOnError extends boolean = false>(options: Options<PatchReportsReportIdStatusData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<PatchReportsReportIdStatusResponses, PatchReportsReportIdStatusErrors, ThrowOnError>({
            url: '/reports/{report_id}/status',
            ...options
        });
    }
    
    /**
     * Delete Report
     */
    public static deleteReportsReportId<ThrowOnError extends boolean = false>(options: Options<DeleteReportsReportIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteReportsReportIdResponses, DeleteReportsReportIdErrors, ThrowOnError>({
            url: '/reports/{report_id}',
            ...options
        });
    }
    
    /**
     * Get Report By Id
     */
    public static getReportsReportId<ThrowOnError extends boolean = false>(options: Options<GetReportsReportIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetReportsReportIdResponses, GetReportsReportIdErrors, ThrowOnError>({
            url: '/reports/{report_id}',
            ...options
        });
    }
    
    /**
     * Edit Report
     */
    public static patchReportsReportId<ThrowOnError extends boolean = false>(options: Options<PatchReportsReportIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<PatchReportsReportIdResponses, PatchReportsReportIdErrors, ThrowOnError>({
            url: '/reports/{report_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Get Reports In Location
     */
    public static getReports<ThrowOnError extends boolean = false>(options: Options<GetReportsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetReportsResponses, GetReportsErrors, ThrowOnError>({
            url: '/reports/',
            ...options
        });
    }
    
    /**
     * Create Report
     */
    public static postReports<ThrowOnError extends boolean = false>(options: Options<PostReportsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostReportsResponses, PostReportsErrors, ThrowOnError>({
            url: '/reports/',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
}

export class Default {
    /**
     * Root
     */
    public static rootGet<ThrowOnError extends boolean = false>(options?: Options<RootGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<RootGetResponses, unknown, ThrowOnError>({
            url: '/',
            ...options
        });
    }
}